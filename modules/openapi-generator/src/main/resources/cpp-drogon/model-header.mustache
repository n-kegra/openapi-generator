#ifndef {{prefix}}_{{classname}}_H
#define {{prefix}}_{{classname}}_H

#include <drogon/drogon.h>
#include <json/json.h>
#include <string>
#include <optional>
#include <{{includeDir}}/Helper.h>

{{#imports}}{{{import}}}
{{/imports}}

{{#cppNamespace}}
namespace {{this}} {
{{/cppNamespace}}

{{#models}}
{{#model}}
{{#summary}}
// {{.}}
{{/summary}}
{{#description}}
// {{.}}
{{/description}}
{{#isEnum}}
struct {{classname}} {
    enum class Value {
        {{#allowableValues}}
            {{#values}}
        e{{#lambda.titlecase}}{{.}}{{/lambda.titlecase}},
            {{/values}}
        {{/allowableValues}}
        Unknown,
    } value;
    {{classname}}() { value = Value::Unknown; };
    operator Json::Value() const;
    {{classname}}(const Json::Value& __value);
    {{classname}}(const Value __value);

    Json::Value toJson() const;
    {{classname}}& fromJson(const Json::Value& _json);
};
{{/isEnum}}
{{^isEnum}}
struct {{classname}} {
    {{#vars}}
    {{{dataType}}} {{name}};
    {{/vars}}

    {{classname}}() = default;
    operator Json::Value() const;
    {{classname}}(const Json::Value& __value);

    Json::Value toJson() const;
    {{classname}}& fromJson(const Json::Value& _json);
};
{{/isEnum}}
{{/model}}
{{/models}}

{{#cppNamespace}}
}
{{/cppNamespace}}

#endif
